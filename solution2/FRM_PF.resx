<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>